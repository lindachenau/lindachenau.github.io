{"version":3,"sources":["images/wireframe.jpeg","images/integration.jpeg","images/design.jpeg","components/ServiceCard.js","components/Footer.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","background","color","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","lightBlue","ServiceCard","title","image","paragraph1","paragraph2","paragraph3","classes","React","useState","expanded","setExpanded","Card","raised","className","CardHeader","Avatar","aria-label","titleTypographyProps","variant","CardMedia","CardContent","Typography","component","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","anchor","paddingBottom","fontSize","Footer","align","services","require","grid","margin","Home","Grid","container","justify","spacing","map","service","item","xs","md","key","createMuiTheme","palette","primary","main","secondary","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","event","preventDefault","flexGrow","paper","Boolean","window","location","hostname","match","ReactDOM","render","setValue","ThemeProvider","AppBar","position","Tabs","onChange","newValue","label","href","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60df504d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wireframe.0f865e1d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/integration.d5cb381e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/design.4fc7135c.jpeg\";","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { lightBlue } from '@material-ui/core/colors'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    background: \"linear-gradient(#e4f3fb, #bbe1e4)\",\n    color: '#142C5C'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: lightBlue[500],\n  }\n}))\n\nexport default function ServiceCard({avatar, title, image, paragraph1, paragraph2, paragraph3}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card raised className={classes.root}>\n      <CardHeader\n        avatar={\n        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {avatar}\n          </Avatar>\n        }\n        title={title}\n        titleTypographyProps={{variant:'h6' }}\n      />\n      <CardMedia\n        className={classes.media}\n        image={image}\n        title={title}\n      />\n      <CardContent>\n        <Typography variant=\"body1\" component=\"p\">\n          {paragraph1}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography variant=\"body1\" component=\"p\" paragraph>\n            {paragraph2}\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\"paragraph>\n            {paragraph3}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  anchor: {\n    paddingTop: 50,\n    paddingBottom: 20,\n    fontSize: '0.9em',\n    color: '#2196f3',\n    // position: \"absolute\",\n    // bottom: 20,\n    // left: '50%',\n    // transform: 'translateX(-50%)'\n  }\n}))\n\nconst Footer = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.anchor}>\n      <Typography align='center'>\n        Copyright &copy; 2020 DiGi Transform. All Rights Reserved\n      </Typography>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport ServiceCard from '../components/ServiceCard'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Footer from '../components/Footer'\nimport './Home.css'\n\nconst wireframe = require(\"../images/wireframe.jpeg\")\nconst integration = require(\"../images/integration.jpeg\")\nconst design = require(\"../images/design.jpeg\")\n\nconst services = [\n  {\n    avatar: \"PWA\",\n    title: \"Progressive Web Apps\",\n    image: wireframe,\n    paragraph1: `The future of web design! Progressive Web Apps can be accessed anywhere on the web without any install friction, while still\n    providing a quality mobile experience that users expect.`,\n    paragraph2: `PWAs rival the performance of native apps but require much less device storage. Many leading companies utilise PWAs in their \n    digital strategies. Those which replaced their existing websites with PWAS, have shown significant increase in user engagement on their \n    new websites.`,\n    paragraph3: `Whether you plan to build a new web app or upgrade your existing web app, PWAs is the most cost effective solution to cater \n    for both desktop and mobile users.` \n  },\n  {\n    avatar: \"BI\",\n    title: \"Business SW Integration\",\n    image: integration,\n    paragraph1: `Spend more time in expanding business and less time in business administration! Integrate your website with back-end systems\n    to improve productivity and reporting efficiency.`,\n    paragraph2: `Integrating your website with back-end systems has many benefits. These advantages range from improved data integrity across \n    the organization, to real-time reporting, and greater employee optimisation from removing manual data entry processes.`,\n    paragraph3: `We can integrate your website with your back-end systems regardless what capabilities the back-end software has. Most importantly, \n    Your data will be kept securely.` \n  },\n  {\n    avatar: \"CD\",\n    title: \"Custom Design\",\n    image: design,\n    paragraph1: `Each business is unique. You need a customised website design and SW architecture to achieve what is best for your current \n    business need and potential future expansion.`,\n    paragraph2: `We take your ideas and data to create content and design your business UI/UX and process flows.`,\n    paragraph3: `Your website will be responsive and integrated with your business back-end systems.` \n  }\n]\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    maxWidth: 1200,\n    margin: 'auto',\n  }\n}))\n\nconst Home = () => {\n  const classes = useStyles()\n\n  return  (\n    <div>\n      <div className=\"hero\">\n        <h1 className=\"title\">Welcome to DiGi Transform!</h1>\n        <p className=\"description\">\n          Let us solve your business problems with the latest digital technologies.\n        </p>\n        <div>\n          <Grid container justify=\"space-between\" className={classes.grid} spacing={2}>\n            {services.map(service => \n              <Grid item xs={12} md={4} key={service.avatar}>\n                <ServiceCard\n                  avatar={service.avatar}\n                  image={service.image}\n                  title={service.title}\n                  paragraph1={service.paragraph1}\n                  paragraph2={service.paragraph2}\n                  paragraph3={service.paragraph3}\n                />\n              </Grid>\n            )}\n          </Grid>\n        </div>\n      </div>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Home from './pages/Home'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#142C5C'\n    },\n    secondary: {\n      main: '#2196f3'\n    }\n  },\n})\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  }\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs\n            variant=\"fullWidth\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"nav tabs example\"\n          >\n            <LinkTab label=\"Home\" href=\"/\" {...a11yProps(0)} />\n            <LinkTab label=\"Portfolio\" href=\"/portfolio\" {...a11yProps(1)} />\n            <LinkTab label=\"About Us\" href=\"/about\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Home/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Typography variant='h5' align='center'>\n            Coming soon!\n          </Typography>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Typography variant='h5' align='center'>\n            Coming soon!\n          </Typography>\n        </TabPanel>\n      </div>\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}